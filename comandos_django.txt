
Reunir todos os arquivos estaticos em uma só pasta
 - python manage.py collectstatic

Sempre que possivel usar namespace para evitar colisão de arquivos.

PATH CONVERTERS
    STR: padrao
    INT: aceita 0 ou qualquer numero inteiro positivo
    SLUG: aceita qualquer string ASCII letras ou numeros e outros caracteres como  -_
    UUID: aceita formato UUID por exemplo 075194d3-6885-417e-a8a8-6c931e272f00
    PATH: Corresponde a qualquer string não vazia, incluindo o separador de caminho, '/'. Isso permite que você compare um caminho de URL completo em vez de um segmento de um caminho de URL como acontece com str.

APLICA AS MIGRARIONS AO BD
    python manage.py migrate (aplica as migrações)
    python manage.py makemigrations (prepara as migrações)

CRIAR SUPERUSER DJANGO
    python manage.py createsuperuser
    user: tefsu
    email: tefersondeveloper@gmail.com
    password: testuser2023

ACESSA O SHELL
    python manage.py shell
    
OBS:
    recipe._meta.get_fields() só funciona caso use um for ou faça um for

SALVA ALGO NO BD
    >>> new_category = Category()
    >>> new_category.name = 'Almoço' 
    >>> new_category
    <Category: Almoço>
    >>> new_category.save()
    .objects.create(name="") #já salva os dados no bd mas é necessario já passar os parametros para não criar linhas vazias

ATUALIZA ALGO NO BD
    (só funciona caso a variavel esteja com o valor do bd salvo nela)
    >> new_category.name = 'novo nome'
    >> new_category.save() 

APAGAR ALGO NO BD
    (só funciona caso a variavel esteja com o valor do bd salvo nela)
    >> new_category.delet()

CRIAR USUARIO VIA SHELL
    from django.contrib.auth.models import User
    User.objects.create_user(first_name='', last_name='', username='', email='', password='')